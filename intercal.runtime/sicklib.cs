//This code is generated by compiling syslib and copying the C#  
//from ~tmp.cs into this source file.  
//
// sick /t:library syslib.i
//
// You can enable richer debug information by recompiling with /debug+

using System;
using INTERCAL.Runtime;
using System.Diagnostics;

//These attributes are used by the compiler for component linking
[assembly: EntryPoint("(1000)", "syslib", "DO_1000")]
[assembly: EntryPoint("(1009)", "syslib", "DO_1009")]
[assembly: EntryPoint("(1004)", "syslib", "DO_1004")]
[assembly: EntryPoint("(1005)", "syslib", "DO_1005")]
[assembly: EntryPoint("(1999)", "syslib", "DO_1999")]
[assembly: EntryPoint("(1002)", "syslib", "DO_1002")]
[assembly: EntryPoint("(1006)", "syslib", "DO_1006")]
[assembly: EntryPoint("(1003)", "syslib", "DO_1003")]
[assembly: EntryPoint("(1007)", "syslib", "DO_1007")]
[assembly: EntryPoint("(1001)", "syslib", "DO_1001")]
[assembly: EntryPoint("(1010)", "syslib", "DO_1010")]
[assembly: EntryPoint("(1020)", "syslib", "DO_1020")]
[assembly: EntryPoint("(1021)", "syslib", "DO_1021")]
[assembly: EntryPoint("(1023)", "syslib", "DO_1023")]
[assembly: EntryPoint("(1022)", "syslib", "DO_1022")]
[assembly: EntryPoint("(1030)", "syslib", "DO_1030")]
[assembly: EntryPoint("(1039)", "syslib", "DO_1039")]
[assembly: EntryPoint("(1032)", "syslib", "DO_1032")]
[assembly: EntryPoint("(1031)", "syslib", "DO_1031")]
[assembly: EntryPoint("(1033)", "syslib", "DO_1033")]
[assembly: EntryPoint("(1040)", "syslib", "DO_1040")]
[assembly: EntryPoint("(1050)", "syslib", "DO_1050")]
[assembly: EntryPoint("(1051)", "syslib", "DO_1051")]
[assembly: EntryPoint("(1500)", "syslib", "DO_1500")]
[assembly: EntryPoint("(1509)", "syslib", "DO_1509")]
[assembly: EntryPoint("(1504)", "syslib", "DO_1504")]
[assembly: EntryPoint("(1503)", "syslib", "DO_1503")]
[assembly: EntryPoint("(1501)", "syslib", "DO_1501")]
[assembly: EntryPoint("(1506)", "syslib", "DO_1506")]
[assembly: EntryPoint("(1505)", "syslib", "DO_1505")]
[assembly: EntryPoint("(1502)", "syslib", "DO_1502")]
[assembly: EntryPoint("(1510)", "syslib", "DO_1510")]
[assembly: EntryPoint("(1520)", "syslib", "DO_1520")]
[assembly: EntryPoint("(1525)", "syslib", "DO_1525")]
[assembly: EntryPoint("(1530)", "syslib", "DO_1530")]
[assembly: EntryPoint("(1535)", "syslib", "DO_1535")]
[assembly: EntryPoint("(1531)", "syslib", "DO_1531")]
[assembly: EntryPoint("(1533)", "syslib", "DO_1533")]
[assembly: EntryPoint("(1532)", "syslib", "DO_1532")]
[assembly: EntryPoint("(1540)", "syslib", "DO_1540")]
[assembly: EntryPoint("(1549)", "syslib", "DO_1549")]
[assembly: EntryPoint("(1541)", "syslib", "DO_1541")]
[assembly: EntryPoint("(1542)", "syslib", "DO_1542")]
[assembly: EntryPoint("(1543)", "syslib", "DO_1543")]
[assembly: EntryPoint("(1544)", "syslib", "DO_1544")]
[assembly: EntryPoint("(1550)", "syslib", "DO_1550")]
[assembly: EntryPoint("(1553)", "syslib", "DO_1553")]
[assembly: EntryPoint("(1552)", "syslib", "DO_1552")]
[assembly: EntryPoint("(1556)", "syslib", "DO_1556")]
[assembly: EntryPoint("(1554)", "syslib", "DO_1554")]
[assembly: EntryPoint("(1555)", "syslib", "DO_1555")]
[assembly: EntryPoint("(1551)", "syslib", "DO_1551")]
[assembly: EntryPoint("(1900)", "syslib", "DO_1900")]
[assembly: EntryPoint("(1901)", "syslib", "DO_1901")]
[assembly: EntryPoint("(1902)", "syslib", "DO_1902")]
[assembly: EntryPoint("(1910)", "syslib", "DO_1910")]
[assembly: EntryPoint("(1912)", "syslib", "DO_1912")]
[assembly: EntryPoint("(1911)", "syslib", "DO_1911")]


[Serializable]
public class syslib : System.Object
{
    public void Run()
    {
        ExecutionContext ec = INTERCAL.Runtime.ExecutionContext.CreateExecutionContext();
        ec.Run(Eval);
    }

    public bool DO_1000(ExecutionContext context)
    {
        return context.Evaluate(Eval, (1000));
    }

    public bool DO_1009(ExecutionContext context)
    {
        return context.Evaluate(Eval, (1009));
    }

    public bool DO_1004(ExecutionContext context)
    {
        return context.Evaluate(Eval, (1004));
    }

    public bool DO_1005(ExecutionContext context)
    {
        return context.Evaluate(Eval, (1005));
    }

    public bool DO_1999(ExecutionContext context)
    {
        return context.Evaluate(Eval, (1999));
    }

    public bool DO_1002(ExecutionContext context)
    {
        return context.Evaluate(Eval, (1002));
    }

    public bool DO_1006(ExecutionContext context)
    {
        return context.Evaluate(Eval, (1006));
    }

    public bool DO_1003(ExecutionContext context)
    {
        return context.Evaluate(Eval, (1003));
    }

    public bool DO_1007(ExecutionContext context)
    {
        return context.Evaluate(Eval, (1007));
    }

    public bool DO_1001(ExecutionContext context)
    {
        return context.Evaluate(Eval, (1001));
    }

    public bool DO_1010(ExecutionContext context)
    {
        return context.Evaluate(Eval, (1010));
    }

    public bool DO_1020(ExecutionContext context)
    {
        return context.Evaluate(Eval, (1020));
    }

    public bool DO_1021(ExecutionContext context)
    {
        return context.Evaluate(Eval, (1021));
    }

    public bool DO_1023(ExecutionContext context)
    {
        return context.Evaluate(Eval, (1023));
    }

    public bool DO_1022(ExecutionContext context)
    {
        return context.Evaluate(Eval, (1022));
    }

    public bool DO_1030(ExecutionContext context)
    {
        return context.Evaluate(Eval, (1030));
    }

    public bool DO_1039(ExecutionContext context)
    {
        return context.Evaluate(Eval, (1039));
    }

    public bool DO_1032(ExecutionContext context)
    {
        return context.Evaluate(Eval, (1032));
    }

    public bool DO_1031(ExecutionContext context)
    {
        return context.Evaluate(Eval, (1031));
    }

    public bool DO_1033(ExecutionContext context)
    {
        return context.Evaluate(Eval, (1033));
    }

    public bool DO_1040(ExecutionContext context)
    {
        return context.Evaluate(Eval, (1040));
    }

    public bool DO_1050(ExecutionContext context)
    {
        return context.Evaluate(Eval, (1050));
    }

    public bool DO_1051(ExecutionContext context)
    {
        return context.Evaluate(Eval, (1051));
    }

    public bool DO_1500(ExecutionContext context)
    {
        return context.Evaluate(Eval, (1500));
    }

    public bool DO_1509(ExecutionContext context)
    {
        return context.Evaluate(Eval, (1509));
    }

    public bool DO_1504(ExecutionContext context)
    {
        return context.Evaluate(Eval, (1504));
    }

    public bool DO_1503(ExecutionContext context)
    {
        return context.Evaluate(Eval, (1503));
    }

    public bool DO_1501(ExecutionContext context)
    {
        return context.Evaluate(Eval, (1501));
    }

    public bool DO_1506(ExecutionContext context)
    {
        return context.Evaluate(Eval, (1506));
    }

    public bool DO_1505(ExecutionContext context)
    {
        return context.Evaluate(Eval, (1505));
    }

    public bool DO_1502(ExecutionContext context)
    {
        return context.Evaluate(Eval, (1502));
    }

    public bool DO_1510(ExecutionContext context)
    {
        return context.Evaluate(Eval, (1510));
    }

    public bool DO_1520(ExecutionContext context)
    {
        return context.Evaluate(Eval, (1520));
    }

    public bool DO_1525(ExecutionContext context)
    {
        return context.Evaluate(Eval, (1525));
    }

    public bool DO_1530(ExecutionContext context)
    {
        return context.Evaluate(Eval, (1530));
    }

    public bool DO_1535(ExecutionContext context)
    {
        return context.Evaluate(Eval, (1535));
    }

    public bool DO_1531(ExecutionContext context)
    {
        return context.Evaluate(Eval, (1531));
    }

    public bool DO_1533(ExecutionContext context)
    {
        return context.Evaluate(Eval, (1533));
    }

    public bool DO_1532(ExecutionContext context)
    {
        return context.Evaluate(Eval, (1532));
    }

    public bool DO_1540(ExecutionContext context)
    {
        return context.Evaluate(Eval, (1540));
    }

    public bool DO_1549(ExecutionContext context)
    {
        return context.Evaluate(Eval, (1549));
    }

    public bool DO_1541(ExecutionContext context)
    {
        return context.Evaluate(Eval, (1541));
    }

    public bool DO_1542(ExecutionContext context)
    {
        return context.Evaluate(Eval, (1542));
    }

    public bool DO_1543(ExecutionContext context)
    {
        return context.Evaluate(Eval, (1543));
    }

    public bool DO_1544(ExecutionContext context)
    {
        return context.Evaluate(Eval, (1544));
    }

    public bool DO_1550(ExecutionContext context)
    {
        return context.Evaluate(Eval, (1550));
    }

    public bool DO_1553(ExecutionContext context)
    {
        return context.Evaluate(Eval, (1553));
    }

    public bool DO_1552(ExecutionContext context)
    {
        return context.Evaluate(Eval, (1552));
    }

    public bool DO_1556(ExecutionContext context)
    {
        return context.Evaluate(Eval, (1556));
    }

    public bool DO_1554(ExecutionContext context)
    {
        return context.Evaluate(Eval, (1554));
    }

    public bool DO_1555(ExecutionContext context)
    {
        return context.Evaluate(Eval, (1555));
    }

    public bool DO_1551(ExecutionContext context)
    {
        return context.Evaluate(Eval, (1551));
    }

    public bool DO_1900(ExecutionContext context)
    {
        return context.Evaluate(Eval, (1900));
    }

    public bool DO_1901(ExecutionContext context)
    {
        return context.Evaluate(Eval, (1901));
    }

    public bool DO_1902(ExecutionContext context)
    {
        return context.Evaluate(Eval, (1902));
    }

    public bool DO_1910(ExecutionContext context)
    {
        return context.Evaluate(Eval, (1910));
    }

    public bool DO_1912(ExecutionContext context)
    {
        return context.Evaluate(Eval, (1912));
    }

    public bool DO_1911(ExecutionContext context)
    {
        return context.Evaluate(Eval, (1911));
    }

    public void DO(ExecutionContext context, string label)
    {
        switch (label)
        {
            case "(1000)": context.Evaluate(Eval, 1000); break;
            case "(1009)": context.Evaluate(Eval, 1009); break;
            case "(1004)": context.Evaluate(Eval, 1004); break;
            case "(1005)": context.Evaluate(Eval, 1005); break;
            case "(1999)": context.Evaluate(Eval, 1999); break;
            case "(1002)": context.Evaluate(Eval, 1002); break;
            case "(1006)": context.Evaluate(Eval, 1006); break;
            case "(1003)": context.Evaluate(Eval, 1003); break;
            case "(1007)": context.Evaluate(Eval, 1007); break;
            case "(1001)": context.Evaluate(Eval, 1001); break;
            case "(1010)": context.Evaluate(Eval, 1010); break;
            case "(1020)": context.Evaluate(Eval, 1020); break;
            case "(1021)": context.Evaluate(Eval, 1021); break;
            case "(1023)": context.Evaluate(Eval, 1023); break;
            case "(1022)": context.Evaluate(Eval, 1022); break;
            case "(1030)": context.Evaluate(Eval, 1030); break;
            case "(1039)": context.Evaluate(Eval, 1039); break;
            case "(1032)": context.Evaluate(Eval, 1032); break;
            case "(1031)": context.Evaluate(Eval, 1031); break;
            case "(1033)": context.Evaluate(Eval, 1033); break;
            case "(1040)": context.Evaluate(Eval, 1040); break;
            case "(1050)": context.Evaluate(Eval, 1050); break;
            case "(1051)": context.Evaluate(Eval, 1051); break;
            case "(1500)": context.Evaluate(Eval, 1500); break;
            case "(1509)": context.Evaluate(Eval, 1509); break;
            case "(1504)": context.Evaluate(Eval, 1504); break;
            case "(1503)": context.Evaluate(Eval, 1503); break;
            case "(1501)": context.Evaluate(Eval, 1501); break;
            case "(1506)": context.Evaluate(Eval, 1506); break;
            case "(1505)": context.Evaluate(Eval, 1505); break;
            case "(1502)": context.Evaluate(Eval, 1502); break;
            case "(1510)": context.Evaluate(Eval, 1510); break;
            case "(1520)": context.Evaluate(Eval, 1520); break;
            case "(1525)": context.Evaluate(Eval, 1525); break;
            case "(1530)": context.Evaluate(Eval, 1530); break;
            case "(1535)": context.Evaluate(Eval, 1535); break;
            case "(1531)": context.Evaluate(Eval, 1531); break;
            case "(1533)": context.Evaluate(Eval, 1533); break;
            case "(1532)": context.Evaluate(Eval, 1532); break;
            case "(1540)": context.Evaluate(Eval, 1540); break;
            case "(1549)": context.Evaluate(Eval, 1549); break;
            case "(1541)": context.Evaluate(Eval, 1541); break;
            case "(1542)": context.Evaluate(Eval, 1542); break;
            case "(1543)": context.Evaluate(Eval, 1543); break;
            case "(1544)": context.Evaluate(Eval, 1544); break;
            case "(1550)": context.Evaluate(Eval, 1550); break;
            case "(1553)": context.Evaluate(Eval, 1553); break;
            case "(1552)": context.Evaluate(Eval, 1552); break;
            case "(1556)": context.Evaluate(Eval, 1556); break;
            case "(1554)": context.Evaluate(Eval, 1554); break;
            case "(1555)": context.Evaluate(Eval, 1555); break;
            case "(1551)": context.Evaluate(Eval, 1551); break;
            case "(1900)": context.Evaluate(Eval, 1900); break;
            case "(1901)": context.Evaluate(Eval, 1901); break;
            case "(1902)": context.Evaluate(Eval, 1902); break;
            case "(1910)": context.Evaluate(Eval, 1910); break;
            case "(1912)": context.Evaluate(Eval, 1912); break;
            case "(1911)": context.Evaluate(Eval, 1911); break;
        }
    }

    bool[] abstainMap = new bool[] { true, true, true, true, true, true, true };

    protected void Eval(ExecutionFrame frame)
    {
        switch (frame.Label)
        {
            case 1000: goto label_1000;
            case 1009: goto label_1009;
            case 1004: goto label_1004;
            case 1005: goto label_1005;
            case 1999: goto label_1999;
            case 1002: goto label_1002;
            case 1006: goto label_1006;
            case 1003: goto label_1003;
            case 1007: goto label_1007;
            case 1001: goto label_1001;
            case 1010: goto label_1010;
            case 1020: goto label_1020;
            case 1021: goto label_1021;
            case 1023: goto label_1023;
            case 1022: goto label_1022;
            case 1030: goto label_1030;
            case 1039: goto label_1039;
            case 1032: goto label_1032;
            case 1031: goto label_1031;
            case 1033: goto label_1033;
            case 1040: goto label_1040;
            case 1050: goto label_1050;
            case 1051: goto label_1051;
            case 1500: goto label_1500;
            case 1509: goto label_1509;
            case 1504: goto label_1504;
            case 1503: goto label_1503;
            case 1501: goto label_1501;
            case 1506: goto label_1506;
            case 1505: goto label_1505;
            case 1502: goto label_1502;
            case 1510: goto label_1510;
            case 1520: goto label_1520;
            case 1525: goto label_1525;
            case 1530: goto label_1530;
            case 1535: goto label_1535;
            case 1531: goto label_1531;
            case 1533: goto label_1533;
            case 1532: goto label_1532;
            case 1540: goto label_1540;
            case 1549: goto label_1549;
            case 1541: goto label_1541;
            case 1542: goto label_1542;
            case 1543: goto label_1543;
            case 1544: goto label_1544;
            case 1550: goto label_1550;
            case 1553: goto label_1553;
            case 1552: goto label_1552;
            case 1556: goto label_1556;
            case 1554: goto label_1554;
            case 1555: goto label_1555;
            case 1551: goto label_1551;
            case 1900: goto label_1900;
            case 1901: goto label_1901;
            case 1902: goto label_1902;
            case 1910: goto label_1910;
            case 1912: goto label_1912;
            case 1911: goto label_1911;
        }

        /* (1000)	PLEASE IGNORE .4*/

        label_1000:
        frame.ExecutionContext.Ignore(".4");

        /* PLEASE ABSTAIN FROM (1005)*/
        abstainMap[0] = false;

        /* (1009)	DO STASH .1 + .2 + .5 + .6*/

        label_1009:
        Trace.WriteLine("       Stashing .1"); ;
        frame.ExecutionContext.Stash(".1");
        Trace.WriteLine("       Stashing .2"); ;
        frame.ExecutionContext.Stash(".2");
        Trace.WriteLine("       Stashing .5"); ;
        frame.ExecutionContext.Stash(".5");
        Trace.WriteLine("       Stashing .6"); ;
        frame.ExecutionContext.Stash(".6");

        /* DO .4 <- #1*/
        frame.ExecutionContext[".4"] = 1;

        /* DO (1004) NEXT*/
        Trace.WriteLine("       Doing (1004) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1004);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* (1004)	PLEASE FORGET #1*/

        label_1004:
        frame.ExecutionContext.Forget(1);

        /* DO .3 <- '?.1$.2'~'#0$#65535'*/
        frame.ExecutionContext[".3"] = (uint)Lib.Select((Lib.Xor(Lib.Mingle(frame.ExecutionContext[".1"], frame.ExecutionContext[".2"]))), 1431655765);

        /* DO .6 <- '&.1$.2'~'#0$#65535'*/
        frame.ExecutionContext[".6"] = (uint)Lib.Select((Lib.And(Lib.Mingle(frame.ExecutionContext[".1"], frame.ExecutionContext[".2"]))), 1431655765);

        /* PLEASE DO .5 <- "?'.6~#32768'$#1"~#3*/
        frame.ExecutionContext[".5"] = (uint)Lib.Select((Lib.Xor(Lib.Mingle(((uint)Lib.Select(frame.ExecutionContext[".6"], 32768)), 1))), 3);

        /* DO (1002) NEXT*/
        Trace.WriteLine("       Doing (1002) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1002);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* DO .4 <- #2*/
        frame.ExecutionContext[".4"] = 2;

        /* (1005)	DO (1006) NEXT*/

        label_1005:
        if (abstainMap[0])
        {
            Trace.WriteLine("       Doing (1006) Next"); ;
            {
                bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1006);
                if (shouldTerminate)
                {
                    goto exit;
                }
            }
        }


        /* (1999)  DOUBLE OR SINGLE PRECISION OVERFLOW*/

        label_1999:
        Lib.Fail("13 * (1999)  DOUBLE OR SINGLE PRECISION OVERFLOW");

        /* (1002)	DO (1001) NEXT*/

        label_1002:
        Trace.WriteLine("       Doing (1001) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1001);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* (1006)	PLEASE FORGET #1*/

        label_1006:
        frame.ExecutionContext.Forget(1);

        /* DO .5 <- '?"'.6~.6'~#1"$#1'~#3*/
        frame.ExecutionContext[".5"] = (uint)Lib.Select((Lib.Xor(Lib.Mingle(((uint)Lib.Select(((uint)Lib.Select(frame.ExecutionContext[".6"], frame.ExecutionContext[".6"])), 1)), 1))), 3);

        /* DO (1003) NEXT*/
        Trace.WriteLine("       Doing (1003) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1003);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* DO .1 <- .3*/
        frame.ExecutionContext[".1"] = frame.ExecutionContext[".3"];

        /* DO .2 <- '.6$#0'~'#32767$#1'*/
        frame.ExecutionContext[".2"] = (uint)Lib.Select((Lib.Mingle(frame.ExecutionContext[".6"], 0)), 715827883);

        /* DO (1004) NEXT*/
        Trace.WriteLine("       Doing (1004) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1004);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* (1003)	DO (1001) NEXT*/

        label_1003:
        Trace.WriteLine("       Doing (1001) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1001);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* DO REINSTATE (1005)*/
        abstainMap[0] = true;

        /* (1007)	PLEASE RETRIEVE .1 + .2 + .5 + .6*/

        label_1007:
        Trace.WriteLine("       Retrieving .1"); ;
        frame.ExecutionContext.Retrieve(".1");
        Trace.WriteLine("       Retrieving .2"); ;
        frame.ExecutionContext.Retrieve(".2");
        Trace.WriteLine("       Retrieving .5"); ;
        frame.ExecutionContext.Retrieve(".5");
        Trace.WriteLine("       Retrieving .6"); ;
        frame.ExecutionContext.Retrieve(".6");

        /* DO REMEMBER .4*/
        frame.ExecutionContext.Remember(".4");

        /* PLEASE RESUME #2*/
        {
            uint depth = 2;
            if (depth > 0)
            {
                frame.ExecutionContext.Resume(depth);
                goto exit;
            }
        }

        /* (1001)	DO RESUME .5*/

        label_1001:
        {
            uint depth = frame.ExecutionContext[".5"];
            if (depth > 0)
            {
                frame.ExecutionContext.Resume(depth);
                goto exit;
            }
        }

        /* (1010)	DO STASH .1 + .2 + .4*/

        label_1010:
        Trace.WriteLine("       Stashing .1"); ;
        frame.ExecutionContext.Stash(".1");
        Trace.WriteLine("       Stashing .2"); ;
        frame.ExecutionContext.Stash(".2");
        Trace.WriteLine("       Stashing .4"); ;
        frame.ExecutionContext.Stash(".4");

        /* DO .4 <- .1*/
        frame.ExecutionContext[".4"] = frame.ExecutionContext[".1"];

        /* DO .1 <- '?.2$#65535'~'#0$#65535'*/
        frame.ExecutionContext[".1"] = (uint)Lib.Select((Lib.Xor(Lib.Mingle(frame.ExecutionContext[".2"], 65535))), 1431655765);

        /* DO (1020) NEXT*/
        Trace.WriteLine("       Doing (1020) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1020);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* PLEASE DO .2 <- .4*/
        frame.ExecutionContext[".2"] = frame.ExecutionContext[".4"];

        /* PLEASE DO (1009) NEXT*/
        Trace.WriteLine("       Doing (1009) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1009);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* DO RETRIEVE .1 + .2 + .4*/
        Trace.WriteLine("       Retrieving .1"); ;
        frame.ExecutionContext.Retrieve(".1");
        Trace.WriteLine("       Retrieving .2"); ;
        frame.ExecutionContext.Retrieve(".2");
        Trace.WriteLine("       Retrieving .4"); ;
        frame.ExecutionContext.Retrieve(".4");

        /* PLEASE RESUME #1*/
        {
            uint depth = 1;
            if (depth > 0)
            {
                frame.ExecutionContext.Resume(depth);
                goto exit;
            }
        }

        /* (1020)	DO STASH .2 + .3*/

        label_1020:
        Trace.WriteLine("       Stashing .2"); ;
        frame.ExecutionContext.Stash(".2");
        Trace.WriteLine("       Stashing .3"); ;
        frame.ExecutionContext.Stash(".3");

        /* DO .2 <- #1*/
        frame.ExecutionContext[".2"] = 1;

        /* PLEASE DO (1021) NEXT*/
        Trace.WriteLine("       Doing (1021) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1021);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* (1021)	DO FORGET #1*/

        label_1021:
        frame.ExecutionContext.Forget(1);

        /* DO .3 <- "?'.1~.2'$#1"~#3*/
        frame.ExecutionContext[".3"] = (uint)Lib.Select((Lib.Xor(Lib.Mingle(((uint)Lib.Select(frame.ExecutionContext[".1"], frame.ExecutionContext[".2"])), 1))), 3);

        /* PLEASE DO .1 <- '?.1$.2'~'#0$#65535'*/
        frame.ExecutionContext[".1"] = (uint)Lib.Select((Lib.Xor(Lib.Mingle(frame.ExecutionContext[".1"], frame.ExecutionContext[".2"]))), 1431655765);

        /* DO (1022) NEXT*/
        Trace.WriteLine("       Doing (1022) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1022);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* DO .2 <- '.2$#0'~'#32767$#1'*/
        frame.ExecutionContext[".2"] = (uint)Lib.Select((Lib.Mingle(frame.ExecutionContext[".2"], 0)), 715827883);

        /* DO (1021) NEXT*/
        Trace.WriteLine("       Doing (1021) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1021);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* (1023)	PLEASE RESUME .3*/

        label_1023:
        {
            uint depth = frame.ExecutionContext[".3"];
            if (depth > 0)
            {
                frame.ExecutionContext.Resume(depth);
                goto exit;
            }
        }

        /* (1022)	DO (1023) NEXT*/

        label_1022:
        Trace.WriteLine("       Doing (1023) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1023);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* PLEASE RETRIEVE .2 + .3*/
        Trace.WriteLine("       Retrieving .2"); ;
        frame.ExecutionContext.Retrieve(".2");
        Trace.WriteLine("       Retrieving .3"); ;
        frame.ExecutionContext.Retrieve(".3");

        /* PLEASE RESUME #2*/
        {
            uint depth = 2;
            if (depth > 0)
            {
                frame.ExecutionContext.Resume(depth);
                goto exit;
            }
        }

        /* (1030)	DO ABSTAIN FROM (1033)*/

        label_1030:
        abstainMap[2] = false;

        /* PLEASE ABSTAIN FROM (1032)*/
        abstainMap[1] = false;

        /* (1039)	DO STASH :1 + .5*/

        label_1039:
        Trace.WriteLine("       Stashing :1"); ;
        frame.ExecutionContext.Stash(":1");
        Trace.WriteLine("       Stashing .5"); ;
        frame.ExecutionContext.Stash(".5");

        /* DO (1530) NEXT*/
        Trace.WriteLine("       Doing (1530) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1530);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* DO .3 <- :1~#65535*/
        frame.ExecutionContext[".3"] = (uint)Lib.Select(frame.ExecutionContext[":1"], 65535);

        /* PLEASE DO .5 <- :1~'#65280$#65280'*/
        frame.ExecutionContext[".5"] = (uint)Lib.Select(frame.ExecutionContext[":1"], 4294901760);

        /* DO .5 <- '?"'.5~.5'~#1"$#1'~#3*/
        frame.ExecutionContext[".5"] = (uint)Lib.Select((Lib.Xor(Lib.Mingle(((uint)Lib.Select(((uint)Lib.Select(frame.ExecutionContext[".5"], frame.ExecutionContext[".5"])), 1)), 1))), 3);

        /* DO (1031) NEXT*/
        Trace.WriteLine("       Doing (1031) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1031);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* (1032)	DO (1033) NEXT*/

        label_1032:
        if (abstainMap[1])
        {
            Trace.WriteLine("       Doing (1033) Next"); ;
            {
                bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1033);
                if (shouldTerminate)
                {
                    goto exit;
                }
            }
        }


        /* DO (1999) NEXT*/
        Trace.WriteLine("       Doing (1999) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1999);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* (1031)	DO (1001) NEXT*/

        label_1031:
        Trace.WriteLine("       Doing (1001) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1001);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* (1033)	DO .4 <- .5*/

        label_1033:
        if (abstainMap[2])
        {
            frame.ExecutionContext[".4"] = frame.ExecutionContext[".5"];
        }


        /* DO REINSTATE (1032)*/
        abstainMap[1] = true;

        /* PLEASE REINSTATE (1033)*/
        abstainMap[2] = true;

        /* DO RETRIEVE :1 + .5*/
        Trace.WriteLine("       Retrieving :1"); ;
        frame.ExecutionContext.Retrieve(":1");
        Trace.WriteLine("       Retrieving .5"); ;
        frame.ExecutionContext.Retrieve(".5");

        /* PLEASE RESUME #2*/
        {
            uint depth = 2;
            if (depth > 0)
            {
                frame.ExecutionContext.Resume(depth);
                goto exit;
            }
        }

        /* (1040)	PLEASE STASH .1 + .2 + .2 + :1 + :2 + :3*/

        label_1040:
        Trace.WriteLine("       Stashing .1"); ;
        frame.ExecutionContext.Stash(".1");
        Trace.WriteLine("       Stashing .2"); ;
        frame.ExecutionContext.Stash(".2");
        Trace.WriteLine("       Stashing .2"); ;
        frame.ExecutionContext.Stash(".2");
        Trace.WriteLine("       Stashing :1"); ;
        frame.ExecutionContext.Stash(":1");
        Trace.WriteLine("       Stashing :2"); ;
        frame.ExecutionContext.Stash(":2");
        Trace.WriteLine("       Stashing :3"); ;
        frame.ExecutionContext.Stash(":3");

        /* DO .2 <- #0*/
        frame.ExecutionContext[".2"] = 0;

        /* DO (1520) NEXT*/
        Trace.WriteLine("       Doing (1520) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1520);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* DO STASH :1*/
        Trace.WriteLine("       Stashing :1"); ;
        frame.ExecutionContext.Stash(":1");

        /* PLEASE RETRIEVE .2*/
        Trace.WriteLine("       Retrieving .2"); ;
        frame.ExecutionContext.Retrieve(".2");

        /* DO .1 <- .2*/
        frame.ExecutionContext[".1"] = frame.ExecutionContext[".2"];

        /* DO .2 <- #0*/
        frame.ExecutionContext[".2"] = 0;

        /* PLEASE DO (1520) NEXT*/
        Trace.WriteLine("       Doing (1520) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1520);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* DO :2 <- :1*/
        frame.ExecutionContext[":2"] = frame.ExecutionContext[":1"];

        /* DO RETRIEVE .1 + .2 + :1*/
        Trace.WriteLine("       Retrieving .1"); ;
        frame.ExecutionContext.Retrieve(".1");
        Trace.WriteLine("       Retrieving .2"); ;
        frame.ExecutionContext.Retrieve(".2");
        Trace.WriteLine("       Retrieving :1"); ;
        frame.ExecutionContext.Retrieve(":1");

        /* DO (1550) NEXT*/
        Trace.WriteLine("       Doing (1550) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1550);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* PLEASE DO .3 <- :3*/
        frame.ExecutionContext[".3"] = frame.ExecutionContext[":3"];

        /* DO RETRIEVE :1 + :2 + :3*/
        Trace.WriteLine("       Retrieving :1"); ;
        frame.ExecutionContext.Retrieve(":1");
        Trace.WriteLine("       Retrieving :2"); ;
        frame.ExecutionContext.Retrieve(":2");
        Trace.WriteLine("       Retrieving :3"); ;
        frame.ExecutionContext.Retrieve(":3");

        /* DO RESUME #1*/
        {
            uint depth = 1;
            if (depth > 0)
            {
                frame.ExecutionContext.Resume(depth);
                goto exit;
            }
        }

        /* (1050)	PLEASE STASH :2 + :3 + .5*/

        label_1050:
        Trace.WriteLine("       Stashing :2"); ;
        frame.ExecutionContext.Stash(":2");
        Trace.WriteLine("       Stashing :3"); ;
        frame.ExecutionContext.Stash(":3");
        Trace.WriteLine("       Stashing .5"); ;
        frame.ExecutionContext.Stash(".5");

        /* DO :2 <- .1*/
        frame.ExecutionContext[":2"] = frame.ExecutionContext[".1"];

        /* PLEASE DO (1550) NEXT*/
        Trace.WriteLine("       Doing (1550) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1550);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* DO .5 <- :3~'#65280$#65280'*/
        frame.ExecutionContext[".5"] = (uint)Lib.Select(frame.ExecutionContext[":3"], 4294901760);

        /* DO .5 <- '?"'.5~.5'~#1"$#1'~#3*/
        frame.ExecutionContext[".5"] = (uint)Lib.Select((Lib.Xor(Lib.Mingle(((uint)Lib.Select(((uint)Lib.Select(frame.ExecutionContext[".5"], frame.ExecutionContext[".5"])), 1)), 1))), 3);

        /* DO (1051) NEXT*/
        Trace.WriteLine("       Doing (1051) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1051);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* DO (1999) NEXT*/
        Trace.WriteLine("       Doing (1999) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1999);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* (1051)	DO (1001) NEXT*/

        label_1051:
        Trace.WriteLine("       Doing (1001) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1001);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* DO .2 <- :3*/
        frame.ExecutionContext[".2"] = frame.ExecutionContext[":3"];

        /* PLEASE RETRIEVE :2 + :3 + .5*/
        Trace.WriteLine("       Retrieving :2"); ;
        frame.ExecutionContext.Retrieve(":2");
        Trace.WriteLine("       Retrieving :3"); ;
        frame.ExecutionContext.Retrieve(":3");
        Trace.WriteLine("       Retrieving .5"); ;
        frame.ExecutionContext.Retrieve(".5");

        /* DO RESUME #2*/
        {
            uint depth = 2;
            if (depth > 0)
            {
                frame.ExecutionContext.Resume(depth);
                goto exit;
            }
        }

        /* (1500)	PLEASE ABSTAIN FROM (1502)*/

        label_1500:
        abstainMap[4] = false;

        /* PLEASE ABSTAIN FROM (1506)*/
        abstainMap[3] = false;

        /* (1509)	PLEASE STASH :1 + .1 + .2 + .3 + .4 + .5 + .6*/

        label_1509:
        Trace.WriteLine("       Stashing :1"); ;
        frame.ExecutionContext.Stash(":1");
        Trace.WriteLine("       Stashing .1"); ;
        frame.ExecutionContext.Stash(".1");
        Trace.WriteLine("       Stashing .2"); ;
        frame.ExecutionContext.Stash(".2");
        Trace.WriteLine("       Stashing .3"); ;
        frame.ExecutionContext.Stash(".3");
        Trace.WriteLine("       Stashing .4"); ;
        frame.ExecutionContext.Stash(".4");
        Trace.WriteLine("       Stashing .5"); ;
        frame.ExecutionContext.Stash(".5");
        Trace.WriteLine("       Stashing .6"); ;
        frame.ExecutionContext.Stash(".6");

        /* DO .1 <- :1~#65535*/
        frame.ExecutionContext[".1"] = (uint)Lib.Select(frame.ExecutionContext[":1"], 65535);

        /* PLEASE DO .2 <- :2~#65535*/
        frame.ExecutionContext[".2"] = (uint)Lib.Select(frame.ExecutionContext[":2"], 65535);

        /* DO (1009) NEXT*/
        Trace.WriteLine("       Doing (1009) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1009);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* DO .5 <- .3*/
        frame.ExecutionContext[".5"] = frame.ExecutionContext[".3"];

        /* PLEASE DO .6 <- .4*/
        frame.ExecutionContext[".6"] = frame.ExecutionContext[".4"];

        /* DO .1 <- :1~'#65280$#65280'*/
        frame.ExecutionContext[".1"] = (uint)Lib.Select(frame.ExecutionContext[":1"], 4294901760);

        /* DO .2 <- :2~'#65280$#65280'*/
        frame.ExecutionContext[".2"] = (uint)Lib.Select(frame.ExecutionContext[":2"], 4294901760);

        /* DO (1009) NEXT*/
        Trace.WriteLine("       Doing (1009) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1009);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* DO .1 <- .3*/
        frame.ExecutionContext[".1"] = frame.ExecutionContext[".3"];

        /* PLEASE DO (1503) NEXT*/
        Trace.WriteLine("       Doing (1503) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1503);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* DO .6 <- .4*/
        frame.ExecutionContext[".6"] = frame.ExecutionContext[".4"];

        /* DO .2 <- #1*/
        frame.ExecutionContext[".2"] = 1;

        /* DO (1009) NEXT*/
        Trace.WriteLine("       Doing (1009) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1009);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* DO .1 <- .3*/
        frame.ExecutionContext[".1"] = frame.ExecutionContext[".3"];

        /* DO (1501) NEXT*/
        Trace.WriteLine("       Doing (1501) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1501);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* (1504)	PLEASE RESUME .6*/

        label_1504:
        {
            uint depth = frame.ExecutionContext[".6"];
            if (depth > 0)
            {
                frame.ExecutionContext.Resume(depth);
                goto exit;
            }
        }

        /* (1503)	DO (1504) NEXT*/

        label_1503:
        Trace.WriteLine("       Doing (1504) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1504);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* (1501)	DO .2 <- .5*/

        label_1501:
        frame.ExecutionContext[".2"] = frame.ExecutionContext[".5"];

        /* DO .5 <- '?"'&.6$.4'~#1"$#2'~#3*/
        frame.ExecutionContext[".5"] = (uint)Lib.Select((Lib.Xor(Lib.Mingle(((uint)Lib.Select((Lib.And(Lib.Mingle(frame.ExecutionContext[".6"], frame.ExecutionContext[".4"]))), 1)), 2))), 3);

        /* DO (1505) NEXT*/
        Trace.WriteLine("       Doing (1505) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1505);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* (1506)	DO (1502) NEXT*/

        label_1506:
        if (abstainMap[3])
        {
            Trace.WriteLine("       Doing (1502) Next"); ;
            {
                bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1502);
                if (shouldTerminate)
                {
                    goto exit;
                }
            }
        }


        /* PLEASE DO (1999) NEXT*/
        Trace.WriteLine("       Doing (1999) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1999);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* (1505)	DO (1001) NEXT*/

        label_1505:
        Trace.WriteLine("       Doing (1001) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1001);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* (1502)	DO :4 <- .5*/

        label_1502:
        if (abstainMap[4])
        {
            frame.ExecutionContext[":4"] = frame.ExecutionContext[".5"];
        }


        /* DO (1520) NEXT*/
        Trace.WriteLine("       Doing (1520) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1520);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* DO :3 <- :1*/
        frame.ExecutionContext[":3"] = frame.ExecutionContext[":1"];

        /* PLEASE RETRIEVE :1 + .1 + .2 + .3 + .4 + .5 + .6*/
        Trace.WriteLine("       Retrieving :1"); ;
        frame.ExecutionContext.Retrieve(":1");
        Trace.WriteLine("       Retrieving .1"); ;
        frame.ExecutionContext.Retrieve(".1");
        Trace.WriteLine("       Retrieving .2"); ;
        frame.ExecutionContext.Retrieve(".2");
        Trace.WriteLine("       Retrieving .3"); ;
        frame.ExecutionContext.Retrieve(".3");
        Trace.WriteLine("       Retrieving .4"); ;
        frame.ExecutionContext.Retrieve(".4");
        Trace.WriteLine("       Retrieving .5"); ;
        frame.ExecutionContext.Retrieve(".5");
        Trace.WriteLine("       Retrieving .6"); ;
        frame.ExecutionContext.Retrieve(".6");

        /* DO REINSTATE (1502)*/
        abstainMap[4] = true;

        /* DO REINSTATE (1506)*/
        abstainMap[3] = true;

        /* PLEASE RESUME #3*/
        {
            uint depth = 3;
            if (depth > 0)
            {
                frame.ExecutionContext.Resume(depth);
                goto exit;
            }
        }

        /* (1510)	DO STASH :1 + :2 + :4*/

        label_1510:
        Trace.WriteLine("       Stashing :1"); ;
        frame.ExecutionContext.Stash(":1");
        Trace.WriteLine("       Stashing :2"); ;
        frame.ExecutionContext.Stash(":2");
        Trace.WriteLine("       Stashing :4"); ;
        frame.ExecutionContext.Stash(":4");

        /* DO :1 <- "'?":2~'#65535$#0'"$#65535'~'#0$#65535'"$"'?":2~'#0$#65535'"$#65535'~'#0$#65535'"*/
        frame.ExecutionContext[":1"] = Lib.Mingle(((uint)Lib.Select((Lib.Xor(Lib.Mingle(((uint)Lib.Select(frame.ExecutionContext[":2"], 2863311530)), 65535))), 1431655765)), ((uint)Lib.Select((Lib.Xor(Lib.Mingle(((uint)Lib.Select(frame.ExecutionContext[":2"], 1431655765)), 65535))), 1431655765)));

        /* DO :2 <- #1*/
        frame.ExecutionContext[":2"] = 1;

        /* DO (1509) NEXT*/
        Trace.WriteLine("       Doing (1509) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1509);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* PLEASE RETRIEVE :1*/
        Trace.WriteLine("       Retrieving :1"); ;
        frame.ExecutionContext.Retrieve(":1");

        /* DO :2 <- :3*/
        frame.ExecutionContext[":2"] = frame.ExecutionContext[":3"];

        /* PLEASE DO (1509) NEXT*/
        Trace.WriteLine("       Doing (1509) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1509);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* DO RETRIEVE :2 + :4*/
        Trace.WriteLine("       Retrieving :2"); ;
        frame.ExecutionContext.Retrieve(":2");
        Trace.WriteLine("       Retrieving :4"); ;
        frame.ExecutionContext.Retrieve(":4");

        /* PLEASE RESUME #1*/
        {
            uint depth = 1;
            if (depth > 0)
            {
                frame.ExecutionContext.Resume(depth);
                goto exit;
            }
        }

        /* (1520)	PLEASE STASH .3 + .4*/

        label_1520:
        Trace.WriteLine("       Stashing .3"); ;
        frame.ExecutionContext.Stash(".3");
        Trace.WriteLine("       Stashing .4"); ;
        frame.ExecutionContext.Stash(".4");

        /* DO .3 <- .1~#43690*/
        frame.ExecutionContext[".3"] = (uint)Lib.Select(frame.ExecutionContext[".1"], 43690);

        /* DO (1525) NEXT*/
        Trace.WriteLine("       Doing (1525) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1525);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* PLEASE DO .4 <- 'V.3$".2~#43690"'~'#0$#65535'*/
        frame.ExecutionContext[".4"] = (uint)Lib.Select((Lib.Or(Lib.Mingle(frame.ExecutionContext[".3"], ((uint)Lib.Select(frame.ExecutionContext[".2"], 43690))))), 1431655765);

        /* DO .3 <- .1~#21845*/
        frame.ExecutionContext[".3"] = (uint)Lib.Select(frame.ExecutionContext[".1"], 21845);

        /* PLEASE DO (1525) NEXT*/
        Trace.WriteLine("       Doing (1525) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1525);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* DO :1 <- .4$"'V.3$".2~#21845"'~'#0$#65535'"*/
        frame.ExecutionContext[":1"] = Lib.Mingle(frame.ExecutionContext[".4"], ((uint)Lib.Select((Lib.Or(Lib.Mingle(frame.ExecutionContext[".3"], ((uint)Lib.Select(frame.ExecutionContext[".2"], 21845))))), 1431655765)));

        /* PLEASE RETRIEVE .3 + .4*/
        Trace.WriteLine("       Retrieving .3"); ;
        frame.ExecutionContext.Retrieve(".3");
        Trace.WriteLine("       Retrieving .4"); ;
        frame.ExecutionContext.Retrieve(".4");

        /* DO RESUME #1*/
        {
            uint depth = 1;
            if (depth > 0)
            {
                frame.ExecutionContext.Resume(depth);
                goto exit;
            }
        }

        /* (1525)	DO .3 <- '"'"'"'.3$#0'~'#32767$#1'"$#0'~'#32767
                $#1'"$#0'~'#16383$#3'"$#0'~'#4095$#15'*/

        label_1525:
        frame.ExecutionContext[".3"] = (uint)Lib.Select((Lib.Mingle(((uint)Lib.Select((Lib.Mingle(((uint)Lib.Select((Lib.Mingle(((uint)Lib.Select((Lib.Mingle(frame.ExecutionContext[".3"], 0)), 715827883)), 0)), 715827883)), 0)), 178956975)), 0)), 11184895);

        /* PLEASE RESUME #1*/
        {
            uint depth = 1;
            if (depth > 0)
            {
                frame.ExecutionContext.Resume(depth);
                goto exit;
            }
        }

        /* (1530)	DO STASH :2 + :3 + .3 + .5*/

        label_1530:
        Trace.WriteLine("       Stashing :2"); ;
        frame.ExecutionContext.Stash(":2");
        Trace.WriteLine("       Stashing :3"); ;
        frame.ExecutionContext.Stash(":3");
        Trace.WriteLine("       Stashing .3"); ;
        frame.ExecutionContext.Stash(".3");
        Trace.WriteLine("       Stashing .5"); ;
        frame.ExecutionContext.Stash(".5");

        /* DO :1 <- #0*/
        frame.ExecutionContext[":1"] = 0;

        /* DO :2 <- .2*/
        frame.ExecutionContext[":2"] = frame.ExecutionContext[".2"];

        /* DO .3 <- #1*/
        frame.ExecutionContext[".3"] = 1;

        /* DO (1535) NEXT*/
        Trace.WriteLine("       Doing (1535) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1535);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* (1535)	PLEASE FORGET #1*/

        label_1535:
        frame.ExecutionContext.Forget(1);

        /* DO .5 <- "?'.1~.3'$#1"~#3*/
        frame.ExecutionContext[".5"] = (uint)Lib.Select((Lib.Xor(Lib.Mingle(((uint)Lib.Select(frame.ExecutionContext[".1"], frame.ExecutionContext[".3"])), 1))), 3);

        /* DO (1531) NEXT*/
        Trace.WriteLine("       Doing (1531) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1531);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* DO (1500) NEXT*/
        Trace.WriteLine("       Doing (1500) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1500);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* DO :1 <- :3*/
        frame.ExecutionContext[":1"] = frame.ExecutionContext[":3"];

        /* PLEASE DO (1533) NEXT*/
        Trace.WriteLine("       Doing (1533) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1533);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* (1531)	PLEASE DO (1001) NEXT*/

        label_1531:
        Trace.WriteLine("       Doing (1001) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1001);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* (1533)	DO FORGET #1*/

        label_1533:
        frame.ExecutionContext.Forget(1);

        /* DO .3 <- '.3$#0'~'#32767$#1'*/
        frame.ExecutionContext[".3"] = (uint)Lib.Select((Lib.Mingle(frame.ExecutionContext[".3"], 0)), 715827883);

        /* DO :2 <- ":2~'#0$#65535'"$"'":2~'#32767$#0'"$#
                0'~'#32767$#1'"*/
        frame.ExecutionContext[":2"] = Lib.Mingle(((uint)Lib.Select(frame.ExecutionContext[":2"], 1431655765)), ((uint)Lib.Select((Lib.Mingle(((uint)Lib.Select(frame.ExecutionContext[":2"], 715827882)), 0)), 715827883)));

        /* PLEASE DO .5 <- "?'.3~.3'$#1"~#3*/
        frame.ExecutionContext[".5"] = (uint)Lib.Select((Lib.Xor(Lib.Mingle(((uint)Lib.Select(frame.ExecutionContext[".3"], frame.ExecutionContext[".3"])), 1))), 3);

        /* DO (1532) NEXT*/
        Trace.WriteLine("       Doing (1532) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1532);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* DO (1535) NEXT*/
        Trace.WriteLine("       Doing (1535) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1535);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* (1532)	DO (1001) NEXT*/

        label_1532:
        Trace.WriteLine("       Doing (1001) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1001);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* PLEASE RETRIEVE :2 + :3 + .3 + .5*/
        Trace.WriteLine("       Retrieving :2"); ;
        frame.ExecutionContext.Retrieve(":2");
        Trace.WriteLine("       Retrieving :3"); ;
        frame.ExecutionContext.Retrieve(":3");
        Trace.WriteLine("       Retrieving .3"); ;
        frame.ExecutionContext.Retrieve(".3");
        Trace.WriteLine("       Retrieving .5"); ;
        frame.ExecutionContext.Retrieve(".5");

        /* DO RESUME #2*/
        {
            uint depth = 2;
            if (depth > 0)
            {
                frame.ExecutionContext.Resume(depth);
                goto exit;
            }
        }

        /* (1540)	PLEASE ABSTAIN FROM (1541)*/

        label_1540:
        abstainMap[5] = false;

        /* DO ABSTAIN FROM (1542)*/
        abstainMap[6] = false;

        /* (1549)	PLEASE STASH :1 + :2 + :4 + :5 + .1 + .2 + .5*/

        label_1549:
        Trace.WriteLine("       Stashing :1"); ;
        frame.ExecutionContext.Stash(":1");
        Trace.WriteLine("       Stashing :2"); ;
        frame.ExecutionContext.Stash(":2");
        Trace.WriteLine("       Stashing :4"); ;
        frame.ExecutionContext.Stash(":4");
        Trace.WriteLine("       Stashing :5"); ;
        frame.ExecutionContext.Stash(":5");
        Trace.WriteLine("       Stashing .1"); ;
        frame.ExecutionContext.Stash(".1");
        Trace.WriteLine("       Stashing .2"); ;
        frame.ExecutionContext.Stash(".2");
        Trace.WriteLine("       Stashing .5"); ;
        frame.ExecutionContext.Stash(".5");

        /* DO .1 <- :1~#65535*/
        frame.ExecutionContext[".1"] = (uint)Lib.Select(frame.ExecutionContext[":1"], 65535);

        /* PLEASE DO .2 <- :2~'#65280$#65280'*/
        frame.ExecutionContext[".2"] = (uint)Lib.Select(frame.ExecutionContext[":2"], 4294901760);

        /* DO .5 <- :1~'#65280$#65280'*/
        frame.ExecutionContext[".5"] = (uint)Lib.Select(frame.ExecutionContext[":1"], 4294901760);

        /* DO (1530) NEXT*/
        Trace.WriteLine("       Doing (1530) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1530);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* DO :3 <- :1*/
        frame.ExecutionContext[":3"] = frame.ExecutionContext[":1"];

        /* DO .2 <- :2~#65535*/
        frame.ExecutionContext[".2"] = (uint)Lib.Select(frame.ExecutionContext[":2"], 65535);

        /* PLEASE DO (1530) NEXT*/
        Trace.WriteLine("       Doing (1530) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1530);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* DO :5 <- :1*/
        frame.ExecutionContext[":5"] = frame.ExecutionContext[":1"];

        /* DO .1 <- .5*/
        frame.ExecutionContext[".1"] = frame.ExecutionContext[".5"];

        /* DO (1530) NEXT*/
        Trace.WriteLine("       Doing (1530) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1530);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* DO :4 <- :1*/
        frame.ExecutionContext[":4"] = frame.ExecutionContext[":1"];

        /* PLEASE DO :1 <- ":3~'#65280$#65280'"$":4~'#65280$#65280'"*/
        frame.ExecutionContext[":1"] = Lib.Mingle(((uint)Lib.Select(frame.ExecutionContext[":3"], 4294901760)), ((uint)Lib.Select(frame.ExecutionContext[":4"], 4294901760)));

        /* DO .5 <- ':1~:1'~#1*/
        frame.ExecutionContext[".5"] = (uint)Lib.Select(((uint)Lib.Select(frame.ExecutionContext[":1"], frame.ExecutionContext[":1"])), 1);

        /* DO .2 <- :2~'#65280$#65280'*/
        frame.ExecutionContext[".2"] = (uint)Lib.Select(frame.ExecutionContext[":2"], 4294901760);

        /* DO (1530) NEXT*/
        Trace.WriteLine("       Doing (1530) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1530);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* PLEASE DO .5 <- '"':1~:1'~#1"$.5'~#3*/
        frame.ExecutionContext[".5"] = (uint)Lib.Select((Lib.Mingle(((uint)Lib.Select(((uint)Lib.Select(frame.ExecutionContext[":1"], frame.ExecutionContext[":1"])), 1)), frame.ExecutionContext[".5"])), 3);

        /* DO .1 <- :3~#65535*/
        frame.ExecutionContext[".1"] = (uint)Lib.Select(frame.ExecutionContext[":3"], 65535);

        /* DO .2 <- #0*/
        frame.ExecutionContext[".2"] = 0;

        /* DO (1520) NEXT*/
        Trace.WriteLine("       Doing (1520) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1520);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* PLEASE DO :2 <- :1*/
        frame.ExecutionContext[":2"] = frame.ExecutionContext[":1"];

        /* PLEASE DO .1 <- :4~#65535*/
        frame.ExecutionContext[".1"] = (uint)Lib.Select(frame.ExecutionContext[":4"], 65535);

        /* DO (1520) NEXT*/
        Trace.WriteLine("       Doing (1520) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1520);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* DO (1509) NEXT*/
        Trace.WriteLine("       Doing (1509) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1509);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* DO .5 <- '.5$":4~#3"'~#15*/
        frame.ExecutionContext[".5"] = (uint)Lib.Select((Lib.Mingle(frame.ExecutionContext[".5"], ((uint)Lib.Select(frame.ExecutionContext[":4"], 3)))), 15);

        /* DO :1 <- :3*/
        frame.ExecutionContext[":1"] = frame.ExecutionContext[":3"];

        /* DO :2 <- :5*/
        frame.ExecutionContext[":2"] = frame.ExecutionContext[":5"];

        /* DO (1509) NEXT*/
        Trace.WriteLine("       Doing (1509) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1509);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* PLEASE DO .5 <- '.5$":4~#3"'~#172*/
        frame.ExecutionContext[".5"] = (uint)Lib.Select((Lib.Mingle(frame.ExecutionContext[".5"], ((uint)Lib.Select(frame.ExecutionContext[":4"], 3)))), 172);

        /* DO .5 <- '?"'.5~.5'~#1"$#1'~#3*/
        frame.ExecutionContext[".5"] = (uint)Lib.Select((Lib.Xor(Lib.Mingle(((uint)Lib.Select(((uint)Lib.Select(frame.ExecutionContext[".5"], frame.ExecutionContext[".5"])), 1)), 1))), 3);

        /* PLEASE RETRIEVE :4*/
        Trace.WriteLine("       Retrieving :4"); ;
        frame.ExecutionContext.Retrieve(":4");

        /* (1541)	DO :4 <- .5*/

        label_1541:
        if (abstainMap[5])
        {
            frame.ExecutionContext[":4"] = frame.ExecutionContext[".5"];
        }


        /* DO (1543) NEXT*/
        Trace.WriteLine("       Doing (1543) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1543);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* (1542)	DO (1544) NEXT*/

        label_1542:
        if (abstainMap[6])
        {
            Trace.WriteLine("       Doing (1544) Next"); ;
            {
                bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1544);
                if (shouldTerminate)
                {
                    goto exit;
                }
            }
        }


        /* PLEASE DO (1999) NEXT*/
        Trace.WriteLine("       Doing (1999) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1999);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* (1543)	DO (1001) NEXT*/

        label_1543:
        Trace.WriteLine("       Doing (1001) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1001);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* (1544)	DO REINSTATE (1541)*/

        label_1544:
        abstainMap[5] = true;

        /* PLEASE REINSTATE (1542)*/
        abstainMap[6] = true;

        /* PLEASE RETRIEVE :1 + :2 + :5 + .1 + .2 + .5*/
        Trace.WriteLine("       Retrieving :1"); ;
        frame.ExecutionContext.Retrieve(":1");
        Trace.WriteLine("       Retrieving :2"); ;
        frame.ExecutionContext.Retrieve(":2");
        Trace.WriteLine("       Retrieving :5"); ;
        frame.ExecutionContext.Retrieve(":5");
        Trace.WriteLine("       Retrieving .1"); ;
        frame.ExecutionContext.Retrieve(".1");
        Trace.WriteLine("       Retrieving .2"); ;
        frame.ExecutionContext.Retrieve(".2");
        Trace.WriteLine("       Retrieving .5"); ;
        frame.ExecutionContext.Retrieve(".5");

        /* DO RESUME #2*/
        {
            uint depth = 2;
            if (depth > 0)
            {
                frame.ExecutionContext.Resume(depth);
                goto exit;
            }
        }

        /* (1550)	DO STASH :1 + :4 + :5 + .5*/

        label_1550:
        Trace.WriteLine("       Stashing :1"); ;
        frame.ExecutionContext.Stash(":1");
        Trace.WriteLine("       Stashing :4"); ;
        frame.ExecutionContext.Stash(":4");
        Trace.WriteLine("       Stashing :5"); ;
        frame.ExecutionContext.Stash(":5");
        Trace.WriteLine("       Stashing .5"); ;
        frame.ExecutionContext.Stash(".5");

        /* DO :3 <- #0*/
        frame.ExecutionContext[":3"] = 0;

        /* DO .5 <- '?"':2~:2'~#1"$#1'~#3*/
        frame.ExecutionContext[".5"] = (uint)Lib.Select((Lib.Xor(Lib.Mingle(((uint)Lib.Select(((uint)Lib.Select(frame.ExecutionContext[":2"], frame.ExecutionContext[":2"])), 1)), 1))), 3);

        /* PLEASE DO (1551) NEXT*/
        Trace.WriteLine("       Doing (1551) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1551);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* DO :4 <- #1*/
        frame.ExecutionContext[":4"] = 1;

        /* PLEASE DO (1553) NEXT*/
        Trace.WriteLine("       Doing (1553) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1553);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* (1553)	DO FORGET #1*/

        label_1553:
        frame.ExecutionContext.Forget(1);

        /* DO .5 <- '?":2~'#32768$#0'"$#2'~#3*/
        frame.ExecutionContext[".5"] = (uint)Lib.Select((Lib.Xor(Lib.Mingle(((uint)Lib.Select(frame.ExecutionContext[":2"], 2147483648)), 2))), 3);

        /* DO (1552) NEXT*/
        Trace.WriteLine("       Doing (1552) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1552);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* DO :2 <- ":2~'#0$#65535'"$"'":2~'#32767$#0'"$#
                   0'~'#32767$#1'"*/
        frame.ExecutionContext[":2"] = Lib.Mingle(((uint)Lib.Select(frame.ExecutionContext[":2"], 1431655765)), ((uint)Lib.Select((Lib.Mingle(((uint)Lib.Select(frame.ExecutionContext[":2"], 715827882)), 0)), 715827883)));

        /* PLEASE DO :4 <- ":4~'#0$#65535'"$"'":4~'#32767
                     $#0'"$#0'~'#32767$#1'"*/
        frame.ExecutionContext[":4"] = Lib.Mingle(((uint)Lib.Select(frame.ExecutionContext[":4"], 1431655765)), ((uint)Lib.Select((Lib.Mingle(((uint)Lib.Select(frame.ExecutionContext[":4"], 715827882)), 0)), 715827883)));

        /* DO (1553) NEXT*/
        Trace.WriteLine("       Doing (1553) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1553);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* (1552)	DO (1001) NEXT*/

        label_1552:
        Trace.WriteLine("       Doing (1001) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1001);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* (1556)	PLEASE FORGET #1*/

        label_1556:
        frame.ExecutionContext.Forget(1);

        /* DO :5 <- "'?":1~'#65535$#0'"$":2~'#65535$#0'"'
                     ~'#0$#65535'"$"'?":1~'#0$#65535'"$":2~'#0$
                     #65535'"'~'#0$#65535'"*/
        frame.ExecutionContext[":5"] = Lib.Mingle(((uint)Lib.Select((Lib.Xor(Lib.Mingle(((uint)Lib.Select(frame.ExecutionContext[":1"], 2863311530)), ((uint)Lib.Select(frame.ExecutionContext[":2"], 2863311530))))), 1431655765)), ((uint)Lib.Select((Lib.Xor(Lib.Mingle(((uint)Lib.Select(frame.ExecutionContext[":1"], 1431655765)), ((uint)Lib.Select(frame.ExecutionContext[":2"], 1431655765))))), 1431655765)));

        /* DO .5 <- '?"'&"':2~:5'~'"'?"'?":5~:5"~"#65535$
                     #65535"'~'#65535$#0'"$#32768'~'#0$#65535'"
                     $"'?":5~:5"~"#65535$#65535"'~'#0$#65535'"'
                     "$"':5~:5'~#1"'~#1"$#2'~#3*/
        frame.ExecutionContext[".5"] = (uint)Lib.Select((Lib.Xor(Lib.Mingle(((uint)Lib.Select((Lib.And(Lib.Mingle(((uint)Lib.Select(((uint)Lib.Select(frame.ExecutionContext[":2"], frame.ExecutionContext[":5"])), (Lib.Mingle(((uint)Lib.Select((Lib.Xor(Lib.Mingle(((uint)Lib.Select((Lib.Xor((uint)Lib.Select(((uint)Lib.Select(frame.ExecutionContext[":5"], frame.ExecutionContext[":5"])), 4294967295))), 2863311530)), 32768))), 1431655765)), ((uint)Lib.Select((Lib.Xor((uint)Lib.Select(((uint)Lib.Select(frame.ExecutionContext[":5"], frame.ExecutionContext[":5"])), 4294967295))), 1431655765)))))), ((uint)Lib.Select(((uint)Lib.Select(frame.ExecutionContext[":5"], frame.ExecutionContext[":5"])), 1))))), 1)), 2))), 3);

        /* DO (1554) NEXT*/
        Trace.WriteLine("       Doing (1554) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1554);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* DO :5 <- :3*/
        frame.ExecutionContext[":5"] = frame.ExecutionContext[":3"];

        /* DO (1510) NEXT*/
        Trace.WriteLine("       Doing (1510) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1510);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* PLEASE DO :1 <- :3*/
        frame.ExecutionContext[":1"] = frame.ExecutionContext[":3"];

        /* DO :3 <- "'V":4~'#65535$#0'"$":5~'#65535$#0'"'
                     ~'#0$#65535'"$"'V":4~'#0$#65535'"$":5~'#0$
                     #65535'"'~'#0$#65535'"*/
        frame.ExecutionContext[":3"] = Lib.Mingle(((uint)Lib.Select((Lib.Or(Lib.Mingle(((uint)Lib.Select(frame.ExecutionContext[":4"], 2863311530)), ((uint)Lib.Select(frame.ExecutionContext[":5"], 2863311530))))), 1431655765)), ((uint)Lib.Select((Lib.Or(Lib.Mingle(((uint)Lib.Select(frame.ExecutionContext[":4"], 1431655765)), ((uint)Lib.Select(frame.ExecutionContext[":5"], 1431655765))))), 1431655765)));

        /* DO (1555) NEXT*/
        Trace.WriteLine("       Doing (1555) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1555);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* (1554)	PLEASE DO (1001) NEXT*/

        label_1554:
        Trace.WriteLine("       Doing (1001) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1001);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* (1555)	DO FORGET #1*/

        label_1555:
        frame.ExecutionContext.Forget(1);

        /* DO .5 <- "?':4~#1'$#2"~#3*/
        frame.ExecutionContext[".5"] = (uint)Lib.Select((Lib.Xor(Lib.Mingle(((uint)Lib.Select(frame.ExecutionContext[":4"], 1)), 2))), 3);

        /* DO (1551) NEXT*/
        Trace.WriteLine("       Doing (1551) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1551);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* DO :2 <- ":2~'#0$#65534'"$":2~'#65535$#0'"*/
        frame.ExecutionContext[":2"] = Lib.Mingle(((uint)Lib.Select(frame.ExecutionContext[":2"], 1431655764)), ((uint)Lib.Select(frame.ExecutionContext[":2"], 2863311530)));

        /* DO :4 <- ":4~'#0$#65534'"$":4~'#65535$#0'"*/
        frame.ExecutionContext[":4"] = Lib.Mingle(((uint)Lib.Select(frame.ExecutionContext[":4"], 1431655764)), ((uint)Lib.Select(frame.ExecutionContext[":4"], 2863311530)));

        /* PLEASE DO (1556) NEXT*/
        Trace.WriteLine("       Doing (1556) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1556);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* (1551)	DO (1001) NEXT*/

        label_1551:
        Trace.WriteLine("       Doing (1001) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1001);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* PLEASE RETRIEVE :1 + :4 + :5 + .5*/
        Trace.WriteLine("       Retrieving :1"); ;
        frame.ExecutionContext.Retrieve(":1");
        Trace.WriteLine("       Retrieving :4"); ;
        frame.ExecutionContext.Retrieve(":4");
        Trace.WriteLine("       Retrieving :5"); ;
        frame.ExecutionContext.Retrieve(":5");
        Trace.WriteLine("       Retrieving .5"); ;
        frame.ExecutionContext.Retrieve(".5");

        /* PLEASE RESUME #2*/
        {
            uint depth = 2;
            if (depth > 0)
            {
                frame.ExecutionContext.Resume(depth);
                goto exit;
            }
        }

        /* (1900)	DO STASH .2 + .3 + .5*/

        label_1900:
        Trace.WriteLine("       Stashing .2"); ;
        frame.ExecutionContext.Stash(".2");
        Trace.WriteLine("       Stashing .3"); ;
        frame.ExecutionContext.Stash(".3");
        Trace.WriteLine("       Stashing .5"); ;
        frame.ExecutionContext.Stash(".5");

        /* DO .1 <- #0*/
        frame.ExecutionContext[".1"] = 0;

        /* DO .2 <- #1*/
        frame.ExecutionContext[".2"] = 1;

        /* PLEASE DO (1901) NEXT*/
        Trace.WriteLine("       Doing (1901) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1901);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* (1901)	DO FORGET #1*/

        label_1901:
        frame.ExecutionContext.Forget(1);

        /* DO %50 .1 <- 'V.1$.2'~'#0$#65535'*/
        if (Lib.Rand(100) < 50)
        {
            Trace.WriteLine("[0241] Rolled the dice and lost."); frame.ExecutionContext[".1"] = (uint)Lib.Select((Lib.Or(Lib.Mingle(frame.ExecutionContext[".1"], frame.ExecutionContext[".2"]))), 1431655765);
        }

        else { Trace.WriteLine("[0241] Rolled the dice and lost."); }
        /* DO .2 <- '.2$#0'~'#32767$#1'*/
        frame.ExecutionContext[".2"] = (uint)Lib.Select((Lib.Mingle(frame.ExecutionContext[".2"], 0)), 715827883);

        /* PLEASE DO .5 <- "?'.2~.2'$#1"~#3*/
        frame.ExecutionContext[".5"] = (uint)Lib.Select((Lib.Xor(Lib.Mingle(((uint)Lib.Select(frame.ExecutionContext[".2"], frame.ExecutionContext[".2"])), 1))), 3);

        /* DO (1902) NEXT*/
        Trace.WriteLine("       Doing (1902) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1902);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* DO (1901) NEXT*/
        Trace.WriteLine("       Doing (1901) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1901);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* (1902)	DO (1001) NEXT*/

        label_1902:
        Trace.WriteLine("       Doing (1001) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1001);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* DO RETRIEVE .2 + .3 + .5*/
        Trace.WriteLine("       Retrieving .2"); ;
        frame.ExecutionContext.Retrieve(".2");
        Trace.WriteLine("       Retrieving .3"); ;
        frame.ExecutionContext.Retrieve(".3");
        Trace.WriteLine("       Retrieving .5"); ;
        frame.ExecutionContext.Retrieve(".5");

        /* PLEASE RESUME #2*/
        {
            uint depth = 2;
            if (depth > 0)
            {
                frame.ExecutionContext.Resume(depth);
                goto exit;
            }
        }

        /* (1910)	PLEASE STASH .1 + .3 + .5 + :1 + :2 + :3*/

        label_1910:
        Trace.WriteLine("       Stashing .1"); ;
        frame.ExecutionContext.Stash(".1");
        Trace.WriteLine("       Stashing .3"); ;
        frame.ExecutionContext.Stash(".3");
        Trace.WriteLine("       Stashing .5"); ;
        frame.ExecutionContext.Stash(".5");
        Trace.WriteLine("       Stashing :1"); ;
        frame.ExecutionContext.Stash(":1");
        Trace.WriteLine("       Stashing :2"); ;
        frame.ExecutionContext.Stash(":2");
        Trace.WriteLine("       Stashing :3"); ;
        frame.ExecutionContext.Stash(":3");

        /* DO .3 <- #65524*/
        frame.ExecutionContext[".3"] = 65524;

        /* DO :1 <- #6*/
        frame.ExecutionContext[":1"] = 6;

        /* DO (1911) NEXT*/
        Trace.WriteLine("       Doing (1911) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1911);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* (1912)	DO (1001) NEXT*/

        label_1912:
        Trace.WriteLine("       Doing (1001) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1001);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* (1911)	DO FORGET #1*/

        label_1911:
        frame.ExecutionContext.Forget(1);

        /* PLEASE DO (1900) NEXT*/
        Trace.WriteLine("       Doing (1900) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1900);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* DO :2 <- .1*/
        frame.ExecutionContext[":2"] = frame.ExecutionContext[".1"];

        /* DO (1500) NEXT*/
        Trace.WriteLine("       Doing (1500) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1500);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* PLEASE DO :1 <- :3*/
        frame.ExecutionContext[":1"] = frame.ExecutionContext[":3"];

        /* DO .1 <- .3*/
        frame.ExecutionContext[".1"] = frame.ExecutionContext[".3"];

        /* DO (1020) NEXT*/
        Trace.WriteLine("       Doing (1020) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1020);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* PLEASE DO .3 <- .1*/
        frame.ExecutionContext[".3"] = frame.ExecutionContext[".1"];

        /* DO .5 <- '?"'.3~.3'~#1"$#2'~#3*/
        frame.ExecutionContext[".5"] = (uint)Lib.Select((Lib.Xor(Lib.Mingle(((uint)Lib.Select(((uint)Lib.Select(frame.ExecutionContext[".3"], frame.ExecutionContext[".3"])), 1)), 2))), 3);

        /* DO (1912) NEXT*/
        Trace.WriteLine("       Doing (1912) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1912);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* DO .1 <- #12*/
        frame.ExecutionContext[".1"] = 12;

        /* PLEASE DO (1050) NEXT*/
        Trace.WriteLine("       Doing (1050) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1050);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* DO RETRIEVE .1*/
        Trace.WriteLine("       Retrieving .1"); ;
        frame.ExecutionContext.Retrieve(".1");

        /* DO (1530) NEXT*/
        Trace.WriteLine("       Doing (1530) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1530);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* DO :2 <- #32768*/
        frame.ExecutionContext[":2"] = 32768;

        /* DO (1500) NEXT*/
        Trace.WriteLine("       Doing (1500) Next"); ;
        {
            bool shouldTerminate = frame.ExecutionContext.Evaluate(Eval, 1500);
            if (shouldTerminate)
            {
                goto exit;
            }
        }

        /* PLEASE DO .2 <- :3~'#65280$#65280'*/
        frame.ExecutionContext[".2"] = (uint)Lib.Select(frame.ExecutionContext[":3"], 4294901760);

        /* PLEASE RETRIEVE .3 + .5 + :1 + :2 + :3*/
        Trace.WriteLine("       Retrieving .3"); ;
        frame.ExecutionContext.Retrieve(".3");
        Trace.WriteLine("       Retrieving .5"); ;
        frame.ExecutionContext.Retrieve(".5");
        Trace.WriteLine("       Retrieving :1"); ;
        frame.ExecutionContext.Retrieve(":1");
        Trace.WriteLine("       Retrieving :2"); ;
        frame.ExecutionContext.Retrieve(":2");
        Trace.WriteLine("       Retrieving :3"); ;
        frame.ExecutionContext.Retrieve(":3");

        /* DO RESUME #1*/
        {
            uint depth = 1;
            if (depth > 0)
            {
                frame.ExecutionContext.Resume(depth);
                goto exit;
            }
        }
        //Generic catch-all if the program
        throw new Exception(Messages.E633);

        exit:
        return;
    }
}

